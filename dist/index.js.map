{"version":3,"file":"index.js","mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAQ,gBAAkBD,IAE1BD,EAAK,gBAAkBC,IARzB,CASGK,MAAM,WACT,M,mBCTA,ICDWC,EAMAC,EASAC,EDdPC,EAAsB,CEA1BA,EAAwB,CAACR,EAASS,KACjC,IAAI,IAAIC,KAAOD,EACXD,EAAoBG,EAAEF,EAAYC,KAASF,EAAoBG,EAAEX,EAASU,IAC5EE,OAAOC,eAAeb,EAASU,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3EF,EAAwB,CAACQ,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFT,EAAyBR,IACH,oBAAXqB,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeb,EAASqB,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeb,EAAS,aAAc,CAAEuB,OAAO,M,KCLhD,SAASC,EAAcC,GAC1B,OAAKC,MAAMC,QAAQF,IAAUA,EAAMG,OAAS,EACjC,KAEJH,EAAMI,KAAKC,MAAMD,KAAKE,SAAWN,EAAMG,S,mFJHlD,SAAWvB,GACPA,EAAa,EAAI,IACjBA,EAAa,EAAI,IACjBA,EAAa,EAAI,IAHrB,CAIGA,IAAcA,EAAY,KAE7B,SAAWC,GACPA,EAAQ,EAAI,IACZA,EAAQ,EAAI,IACZA,EAAQ,EAAI,IACZA,EAAQ,EAAI,IACZA,EAAQ,EAAI,IACZA,EAAQ,EAAI,IANhB,CAOGA,IAASA,EAAO,KAEnB,SAAWC,GACPA,EAAiB,OAAI,IACrBA,EAA2B,iBAAI,IAC/BA,EAAoB,UAAI,GAH5B,CAIGA,IAAaA,EAAW,KKpB3B,IAAIyB,EAAgD,SAAUC,EAAIC,EAAMC,GACpE,GAAIA,GAA6B,IAArBC,UAAUR,OAAc,IAAK,IAA4BS,EAAxBC,EAAI,EAAGC,EAAIL,EAAKN,OAAYU,EAAIC,EAAGD,KACxED,GAAQC,KAAKJ,IACRG,IAAIA,EAAKX,MAAMR,UAAUsB,MAAMpB,KAAKc,EAAM,EAAGI,IAClDD,EAAGC,GAAKJ,EAAKI,IAGrB,OAAOL,EAAGQ,OAAOJ,GAAMX,MAAMR,UAAUsB,MAAMpB,KAAKc,KAIlDQ,EAAmB,SAAUC,EAAOC,EAAcC,EAAWC,EAAUC,GAIvE,IAHA,IACIC,EACAC,EAFAC,EAAQ,GAGHZ,EAAI,EAAGA,EAAIS,EAAUT,IAAK,CAC/B,GACIW,EAAUzB,EAAcmB,SACnBC,EAAaI,KAAkBJ,EAAaK,IACrDC,EAAMC,KAAK,CACPC,KAAMH,EACNI,MAAOxB,KAAKC,MAAMD,KAAKE,SAAWe,GAAY,EAC9CQ,SAAU9B,EAAcqB,KAE5BG,EAAeC,EAEnB,OAAOC,GAmBPK,EAAe,CAAC,IAAK,KACrBC,EAAmB,CAAC,KAAM,MCxC1BC,EAAmB,SAAUP,GAC7B,OAAOA,EACFQ,KAAI,SAAUC,GACf,OAAIjC,MAAMC,QAAQgC,GACPF,EAAiBE,GAAQ,KATzB,SAAUA,GACzB,IAAIC,EAAaD,EAAKN,MAAQ,EAAI,GAAGZ,OAAOkB,EAAKN,OAAS,GACtDQ,EAAiBF,EAAKN,MAAQ,EAAI,IAAM,GAC5C,MAAO,GAAGZ,OAAOmB,GAAYnB,OAAOkB,EAAKP,MAAMX,OAAOoB,GAAgBpB,OAAOkB,EAAKL,UASnEQ,CAAaH,MAGvBI,KAAK,MAEHC,EAAO,SAAUC,EAAMlB,GAG9B,YAFa,IAATkB,IAAmBA,EAAO,QACb,IAAblB,IAAuBA,EAAW,IAC/BU,EDOuB,SAAUQ,EAAMlB,GAC9C,IAAImB,EAGJ,YAFa,IAATD,IAAmBA,EAAO,QACb,IAAblB,IAAuBA,EAAW,IAC/BL,EAAiB,CAACpC,EAAK6D,EAAG7D,EAAK8D,EAAG9D,EAAK+D,EAAG/D,EAAKgE,EAAGhE,EAAKiE,EAAGjE,EAAKkE,KAAKN,EAAK,IACzE5D,EAAK6D,GAAK9D,EAAUoE,EACvBP,EAAG5D,EAAK8D,GAAK/D,EAAUoE,EACvBP,EAAG5D,EAAK+D,GAAKhE,EAAUqE,EACvBR,EAAG5D,EAAKgE,GAAKjE,EAAUqE,EACvBR,EAAG5D,EAAKiE,GAAKlE,EAAUsE,EACvBT,EAAG5D,EAAKkE,GAAKnE,EAAUsE,EACvBT,GAAK,CACL3D,EAASqE,OACTrE,EAASsE,iBACTtE,EAASuE,WACVjD,KAAKC,MAAMmC,EAAO,GAAIlB,GCtBDgC,CAAqBd,EAAMlB,KAE5CiC,EAAW,WAClB,OAAOvB,ED0B2B,SAAUwB,EAAgBC,QACrC,IAAnBD,IAA6BA,EAAiB,SAC7B,IAAjBC,IAA2BA,EAAe,GAE9C,IADA,IAAIhC,EAAQ,GACHZ,EAAI,EAAGA,EAAI4C,EAAc5C,IAAK,CACnCY,EAAMZ,GAAK,GACX,IAAK,IAAI6C,EAAI,EAAGA,EAAIF,EAAgBE,IAChCjC,EAAMZ,GAAGa,KAAK,CACVC,KAAMG,EAAa4B,EAAI5B,EAAa3B,QACpC0B,SAAU9B,EAAcgC,GACxBH,MAAO,IAGfH,EAAMZ,GAAGa,KAAK,CACVC,KAAM,IACNE,SAAU9B,EAAc,CAAC,GAAI,MAC7B6B,MAAO,IAGf,OAAOH,EC7CiBkC,KAEjBC,EAAW,SAAUtC,GAC5B,OAAOU,EDyD2B,SAAUV,GAC5C,IAAImB,OACa,IAAbnB,IAAuBA,EAAW,IACtC,IDjFoBtB,ECiFhByB,EAAQR,EAAiB,CAACpC,EAAK6D,EAAG7D,EAAK8D,EAAG9D,EAAK+D,EAAG/D,EAAKkE,KAAKN,EAAK,IAC9D5D,EAAK6D,GAAK,IACbD,EAAG5D,EAAK8D,GAAK,IACbF,EAAG5D,EAAK+D,GAAK,IACbH,EAAG5D,EAAKkE,GAAK,IACbN,GAAK,CACL3D,EAASsE,iBACTtE,EAASuE,WACV,EAAG/B,GAYN,ODrGoBtB,EC0FZ,CAAC,IAAK,IAAK,IAAK,KDzFjBA,EAAMiC,KAAI,SAAUnC,GAAS,MAAO,CAAGA,MAAOA,EAAO+D,KAAMzD,KAAKE,aAClEuD,MAAK,SAAUC,EAAGC,GAAK,OAAOD,EAAED,KAAOE,EAAEF,QACzC5B,KAAI,SAAUQ,GAEf,OADYA,EAAG3C,UCuFdkE,SAAQ,SAAUC,GACnB,IAAIpC,EAAW9B,EAAc,CAACjB,EAASuE,UAAWvE,EAASsE,iBAAkB,OAC7D,MAAZvB,GACAJ,EAAMC,KAAK,CACPC,KAAMsC,EACNpC,SAAUA,EACVD,MAAO,OAIZH,EChFiByC,CAAyB5C,KAE1C6C,EAAQ,SAAU7C,GACzB,OAAOU,EDyCwB,SAAUV,GACzC,IAAImB,EAEJ,YADiB,IAAbnB,IAAuBA,EAAW,GAC/BL,EAAiB,CAACpC,EAAK6D,EAAG7D,EAAK8D,EAAG9D,EAAK+D,EAAG/D,EAAKkE,KAAKN,EAAK,IACzD5D,EAAK6D,GAAK,IACbD,EAAG5D,EAAK8D,GAAK,IACbF,EAAG5D,EAAK+D,GAAK,IACbH,EAAG5D,EAAKkE,GAAK,IACbN,GAAK,CACL3D,EAASsE,iBACTtE,EAASuE,WACV,EAAG/B,GCpDkB8C,CAAsB9C,KAEvC+C,EAAU,SAAU/C,GAC3B,OD4EiC,SAAUA,QAC1B,IAAbA,IAAuBA,EAAW,IAgHtC,IA/GA,IAAIgD,EAAO,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC7BC,EAAS,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAC/BC,EAAU,SAAU/C,GACpB,KAAgB,GAATA,GACH,GAAIA,EAAQ,EAERA,GADIgD,EAAQH,EAAKI,QAEjBJ,EAAK5C,KAAK+C,QAET,GAAIhD,EAAQ,EAAG,CAChB,IAAIgD,EACJhD,GADIgD,EAAQH,EAAKK,MAEjBL,EAAKM,QAAQH,KAIrBI,EAAa,SAAUpD,GACvB,KAAgB,GAATA,GACH,GAAIA,EAAQ,EAAG,CAEX,IADIgD,EAAQF,EAAOG,UACLjD,EACV,MAAMqD,MAAM,YAEhBrD,GAASgD,EACTF,EAAO7C,KAAK+C,QAEX,GAAIhD,EAAQ,EAAG,CAChB,IAAIgD,EACJ,IADIA,EAAQF,EAAOI,OACPlD,EACR,MAAMqD,MAAM,aAEhBrD,GAASgD,EACTF,EAAOK,QAAQH,KAIvB1D,EAAQ,WAIR,IAHA,IAAIgE,EAAS,EACTC,EAAY,EACZlF,EAAQ,EACHe,EAAIyD,EAAKnE,OAAQU,EAAI,GAAKf,EAAQ,EAAGe,IAC1Cf,GAASwE,EAAKzD,EAAI,GAClBkE,IAGJ,IADAjF,EAAQ,EACCe,EAAI,EAAGA,EAAI0D,EAAOpE,QAAUL,EAAQ,EAAGe,IAC5Cf,GAASyE,EAAO1D,GAChBmE,IAEJ,IAAIC,EAAWX,EAAKY,OAAOZ,EAAKnE,OAAS4E,EAAQT,EAAKnE,QAClDgF,EAAcZ,EAAOW,OAAO,EAAGF,GACnCV,EAAOA,EAAKtD,OAAOmE,GACnBZ,EAASU,EAASjE,OAAOuD,IAEzBa,EAAiB,SAAUC,GAE3B,IADA,IAAIvF,EAAQ,EACHe,EAAI,EAAGA,EAAIwE,EAAMlF,QAAUL,EAAQ,EAAGe,IAE3C,IADAf,GAASuF,EAAMxE,IACH,EACR,OAAO,EAGf,OAAO,GAEPyE,EAAiB,SAAUD,EAAO5D,GAClC,GAAIA,EAAQ,EAAG,CAEX,KAAOA,EAAQ,GAAG,CAEd,IADIgD,EAAQY,EAAMX,SACNtE,KAAKmF,IAAI9D,GACjB,OAAO,EAEXA,GAASgD,EACTY,EAAM3D,KAAK+C,GAEf,OAAOW,EAAeC,GAErB,GAAI5D,EAAQ,EAAG,CAEhB,KAAOA,EAAQ,GAAG,CACd,IAAIgD,EACJ,GAAIhD,GADAgD,EAAQY,EAAMV,OAEd,OAAO,EAEXlD,GAASgD,EACTY,EAAMT,QAAQH,GAElB,OAAOW,EAAeC,GAItB,OAAO,GAGXG,EAAgB,WAGhB,IAFA,IAAIC,EAAc,GACdC,EAAiB,GACZ7E,GAAK,EAAGA,GAAK,EAAGA,IACjByE,EAAe/E,EAAc,GAAI+D,GAAM,GAAOzD,IAC9C4E,EAAY/D,KAAKb,GAEjByE,EAAe/E,EAAc,GAAIgE,GAAQ,GAAO1D,IAChD6E,EAAehE,KAAKb,GAG5B,MAAO,CACH4E,YAAaA,EACbC,eAAgBA,IAGpBjE,EAAQ,GACHZ,EAAI,EAAGA,EAAIS,EAAUT,IAAK,CAC/B,IAAI8E,EAAQH,IACRI,EAAU,EACVC,EAAa,EACjB,GACID,EAAU7F,EAAc4F,EAAMF,aAC9BI,EAAa9F,EAAc4F,EAAMD,sBAChB,IAAZE,GAAgC,IAAfC,GAC1BpE,EAAMC,KAAK,CACPoE,IAAKF,EACLrB,OAAQsB,IAEZrB,EAAQoB,GACRf,EAAWgB,GACX9E,IAEJ,OAAOU,EC7MAsE,CAAwBzE,GAC1BW,KAAI,SAAUC,GAAQ,MAAO,KAAKlB,OAAOkB,EAAK4D,IAAK,MAAM9E,OAAOkB,EAAKqC,OAAQ,UAC7EjC,KAAK,K","sources":["webpack://sr-scrambler/webpack/universalModuleDefinition","webpack://sr-scrambler/webpack/bootstrap","webpack://sr-scrambler/./src/enums.ts","webpack://sr-scrambler/webpack/runtime/define property getters","webpack://sr-scrambler/webpack/runtime/hasOwnProperty shorthand","webpack://sr-scrambler/webpack/runtime/make namespace object","webpack://sr-scrambler/./src/util.ts","webpack://sr-scrambler/./src/scrambler/scrambler.ts","webpack://sr-scrambler/./src/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sr-scrambler\"] = factory();\n\telse\n\t\troot[\"sr-scrambler\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","export var CubePlane;\n(function (CubePlane) {\n    CubePlane[\"X\"] = \"x\";\n    CubePlane[\"Y\"] = \"y\";\n    CubePlane[\"Z\"] = \"z\";\n})(CubePlane || (CubePlane = {}));\nexport var Side;\n(function (Side) {\n    Side[\"L\"] = \"L\";\n    Side[\"R\"] = \"R\";\n    Side[\"U\"] = \"U\";\n    Side[\"D\"] = \"D\";\n    Side[\"F\"] = \"F\";\n    Side[\"B\"] = \"B\";\n})(Side || (Side = {}));\nexport var Modifier;\n(function (Modifier) {\n    Modifier[\"Double\"] = \"2\";\n    Modifier[\"CounterClockwise\"] = \"'\";\n    Modifier[\"Clockwise\"] = \"\";\n})(Modifier || (Modifier = {}));\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export function randomElement(array) {\n    if (!Array.isArray(array) || array.length < 1) {\n        return null;\n    }\n    return array[Math.floor(Math.random() * array.length)];\n}\nexport function shuffle(array) {\n    return array.map(function (value) { return ({ value: value, sort: Math.random() }); })\n        .sort(function (a, b) { return a.sort - b.sort; })\n        .map(function (_a) {\n        var value = _a.value;\n        return value;\n    });\n}\n","var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { CubePlane, Modifier, Side } from \"../enums\";\nimport { randomElement, shuffle } from \"../util\";\nvar generateScramble = function (faces, planeMapping, modifiers, maxDepth, numTurns) {\n    var turns = [];\n    var previousTurn;\n    var newTurn;\n    for (var i = 0; i < numTurns; i++) {\n        do {\n            newTurn = randomElement(faces);\n        } while (planeMapping[previousTurn] === planeMapping[newTurn]);\n        turns.push({\n            face: newTurn,\n            depth: Math.floor(Math.random() * maxDepth) + 1,\n            modifier: randomElement(modifiers)\n        });\n        previousTurn = newTurn;\n    }\n    return turns;\n};\nexport var generateCubeScramble = function (size, numTurns) {\n    var _a;\n    if (size === void 0) { size = 3; }\n    if (numTurns === void 0) { numTurns = 21; }\n    return generateScramble([Side.L, Side.R, Side.U, Side.D, Side.F, Side.B], (_a = {},\n        _a[Side.L] = CubePlane.X,\n        _a[Side.R] = CubePlane.X,\n        _a[Side.U] = CubePlane.Y,\n        _a[Side.D] = CubePlane.Y,\n        _a[Side.F] = CubePlane.Z,\n        _a[Side.B] = CubePlane.Z,\n        _a), [\n        Modifier.Double,\n        Modifier.CounterClockwise,\n        Modifier.Clockwise\n    ], Math.floor(size / 2), numTurns);\n};\nvar pochmanFaces = ['D', 'R'];\nvar pochmanModifiers = ['++', '--'];\n/**\n * generates a pochman scramble for the megaminx\n */\nexport var generateMegaminxScramble = function (sequenceLength, numSequences) {\n    if (sequenceLength === void 0) { sequenceLength = 10; }\n    if (numSequences === void 0) { numSequences = 6; }\n    var turns = [];\n    for (var i = 0; i < numSequences; i++) {\n        turns[i] = [];\n        for (var j = 0; j < sequenceLength; j++) {\n            turns[i].push({\n                face: pochmanFaces[j % pochmanFaces.length],\n                modifier: randomElement(pochmanModifiers),\n                depth: 1\n            });\n        }\n        turns[i].push({\n            face: 'U',\n            modifier: randomElement(['', '\\'']),\n            depth: 1\n        });\n    }\n    return turns;\n};\nexport var generateSkewbScramble = function (numTurns) {\n    var _a;\n    if (numTurns === void 0) { numTurns = 9; }\n    return generateScramble([Side.L, Side.R, Side.U, Side.B], (_a = {},\n        _a[Side.L] = 'L',\n        _a[Side.R] = 'R',\n        _a[Side.U] = 'U',\n        _a[Side.B] = 'B',\n        _a), [\n        Modifier.CounterClockwise,\n        Modifier.Clockwise\n    ], 1, numTurns);\n};\nexport var generatePyraminxScramble = function (numTurns) {\n    var _a;\n    if (numTurns === void 0) { numTurns = 10; }\n    var turns = generateScramble([Side.L, Side.R, Side.U, Side.B], (_a = {},\n        _a[Side.L] = 'L',\n        _a[Side.R] = 'R',\n        _a[Side.U] = 'U',\n        _a[Side.B] = 'B',\n        _a), [\n        Modifier.CounterClockwise,\n        Modifier.Clockwise\n    ], 1, numTurns);\n    shuffle(['l', 'r', 'u', 'b'])\n        .forEach(function (point) {\n        var modifier = randomElement([Modifier.Clockwise, Modifier.CounterClockwise, null]);\n        if (modifier != null) {\n            turns.push({\n                face: point,\n                modifier: modifier,\n                depth: 1\n            });\n        }\n    });\n    return turns;\n};\nexport var generateSquare1Scramble = function (numTurns) {\n    if (numTurns === void 0) { numTurns = 12; }\n    var tops = [2, 1, 2, 1, 2, 1, 2, 1];\n    var bottom = [1, 2, 1, 2, 1, 2, 1, 2];\n    var turnTop = function (turns) {\n        while (turns != 0) {\n            if (turns < 0) {\n                var piece = tops.shift();\n                turns += piece;\n                tops.push(piece);\n            }\n            else if (turns > 0) {\n                var piece = tops.pop();\n                turns -= piece;\n                tops.unshift(piece);\n            }\n        }\n    };\n    var turnBottom = function (turns) {\n        while (turns != 0) {\n            if (turns < 0) {\n                var piece = bottom.shift();\n                if (piece > (-turns)) {\n                    throw Error(\"breaking\");\n                }\n                turns += piece;\n                bottom.push(piece);\n            }\n            else if (turns > 0) {\n                var piece = bottom.pop();\n                if (piece > turns) {\n                    throw Error(\"breaking2\");\n                }\n                turns -= piece;\n                bottom.unshift(piece);\n            }\n        }\n    };\n    var slice = function () {\n        var topNum = 0;\n        var bottomNum = 0;\n        var value = 0;\n        for (var i = tops.length; i > 0 && value < 6; i--) {\n            value += tops[i - 1];\n            topNum++;\n        }\n        value = 0;\n        for (var i = 0; i < bottom.length && value < 6; i++) {\n            value += bottom[i];\n            bottomNum++;\n        }\n        var topSlice = tops.splice(tops.length - topNum, tops.length);\n        var bottomSlice = bottom.splice(0, bottomNum);\n        tops = tops.concat(bottomSlice);\n        bottom = topSlice.concat(bottom);\n    };\n    var isLayerAligned = function (layer) {\n        var value = 0;\n        for (var i = 0; i < layer.length && value < 6; i++) {\n            value += layer[i];\n            if (value > 6) {\n                return false;\n            }\n        }\n        return true;\n    };\n    var isMovePossible = function (layer, turns) {\n        if (turns < 0) {\n            // Take off front, put on end\n            while (turns < 0) {\n                var piece = layer.shift();\n                if (piece > Math.abs(turns)) {\n                    return false;\n                }\n                turns += piece;\n                layer.push(piece);\n            }\n            return isLayerAligned(layer);\n        }\n        else if (turns > 0) {\n            // Take off end, put on front\n            while (turns > 0) {\n                var piece = layer.pop();\n                if (turns < piece) {\n                    return false;\n                }\n                turns -= piece;\n                layer.unshift(piece);\n            }\n            return isLayerAligned(layer);\n        }\n        else {\n            // Turns = 0, should be possible\n            return true;\n        }\n    };\n    var possibleMoves = function () {\n        var possibleTop = [];\n        var possibleBottom = [];\n        for (var i = -6; i <= 6; i++) {\n            if (isMovePossible(__spreadArray([], tops, true), i)) {\n                possibleTop.push(i);\n            }\n            if (isMovePossible(__spreadArray([], bottom, true), i)) {\n                possibleBottom.push(i);\n            }\n        }\n        return {\n            possibleTop: possibleTop,\n            possibleBottom: possibleBottom\n        };\n    };\n    var turns = [];\n    for (var i = 0; i < numTurns; i++) {\n        var moves = possibleMoves();\n        var topMove = 0;\n        var bottomMove = 0;\n        do {\n            topMove = randomElement(moves.possibleTop);\n            bottomMove = randomElement(moves.possibleBottom);\n        } while (topMove === 0 && bottomMove === 0);\n        turns.push({\n            top: topMove,\n            bottom: bottomMove\n        });\n        turnTop(topMove);\n        turnBottom(bottomMove);\n        slice();\n    }\n    return turns;\n};\n","import { generateSquare1Scramble, generateCubeScramble, generateMegaminxScramble, generatePyraminxScramble, generateSkewbScramble } from \"./scrambler/scrambler\";\nvar turnToString = function (turn) {\n    var depthLayer = turn.depth > 2 ? \"\".concat(turn.depth) : '';\n    var sliceIndicator = turn.depth > 1 ? 'w' : '';\n    return \"\".concat(depthLayer).concat(turn.face).concat(sliceIndicator).concat(turn.modifier);\n};\nvar scrambleToString = function (turns) {\n    return turns\n        .map(function (turn) {\n        if (Array.isArray(turn)) {\n            return scrambleToString(turn) + '\\n';\n        }\n        else {\n            return turnToString(turn);\n        }\n    })\n        .join(' ');\n};\nexport var cube = function (size, numTurns) {\n    if (size === void 0) { size = 3; }\n    if (numTurns === void 0) { numTurns = 21; }\n    return scrambleToString(generateCubeScramble(size, numTurns));\n};\nexport var megaminx = function () {\n    return scrambleToString(generateMegaminxScramble());\n};\nexport var pyraminx = function (numTurns) {\n    return scrambleToString(generatePyraminxScramble(numTurns));\n};\nexport var skewb = function (numTurns) {\n    return scrambleToString(generateSkewbScramble(numTurns));\n};\nexport var square1 = function (numTurns) {\n    return generateSquare1Scramble(numTurns)\n        .map(function (turn) { return \" (\".concat(turn.top, \", \").concat(turn.bottom, \") /\"); })\n        .join('');\n};\n"],"names":["root","factory","exports","module","define","amd","self","CubePlane","Side","Modifier","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","randomElement","array","Array","isArray","length","Math","floor","random","__spreadArray","to","from","pack","arguments","ar","i","l","slice","concat","generateScramble","faces","planeMapping","modifiers","maxDepth","numTurns","previousTurn","newTurn","turns","push","face","depth","modifier","pochmanFaces","pochmanModifiers","scrambleToString","map","turn","depthLayer","sliceIndicator","turnToString","join","cube","size","_a","L","R","U","D","F","B","X","Y","Z","Double","CounterClockwise","Clockwise","generateCubeScramble","megaminx","sequenceLength","numSequences","j","generateMegaminxScramble","pyraminx","sort","a","b","forEach","point","generatePyraminxScramble","skewb","generateSkewbScramble","square1","tops","bottom","turnTop","piece","shift","pop","unshift","turnBottom","Error","topNum","bottomNum","topSlice","splice","bottomSlice","isLayerAligned","layer","isMovePossible","abs","possibleMoves","possibleTop","possibleBottom","moves","topMove","bottomMove","top","generateSquare1Scramble"],"sourceRoot":""}