{"version":3,"sources":["webpack://sr-scrambler/webpack/universalModuleDefinition","webpack://sr-scrambler/webpack/bootstrap","webpack://sr-scrambler/./src/enums.ts","webpack://sr-scrambler/./src/index.ts","webpack://sr-scrambler/./src/util.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oBAAoB;AACd;AACP;AACA;AACA;AACA;AACA,CAAC,4BAA4B;;;;;;;;;;;;;ACpB7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACoD;AACb;AACvC,2BAA2B;AAC3B,OAAO,2CAAI,MAAM,gDAAS;AAC1B,OAAO,2CAAI,MAAM,gDAAS;AAC1B,OAAO,2CAAI,MAAM,gDAAS;AAC1B,OAAO,2CAAI,MAAM,gDAAS;AAC1B,OAAO,2CAAI,MAAM,gDAAS;AAC1B,OAAO,2CAAI,MAAM,gDAAS;AAC1B;AACA,aAAa,2CAAI,IAAI,2CAAI,IAAI,2CAAI,IAAI,2CAAI,IAAI,2CAAI,IAAI,2CAAI;AACzD;AACA,IAAI,+CAAQ;AACZ,IAAI,+CAAQ;AACZ,IAAI,+CAAQ;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACe;AAChB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,mBAAmB,cAAc;AACjC;AACA,sBAAsB,2DAAa;AACnC,SAAS;AACT;AACA,kDAAkD,2DAAa;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,IAAI;AAChB,YAAY,IAAI;AAChB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA;AACA;AACA;AACA,YAAY,MAAM;AAClB,YAAY,OAAO;AACnB;AACO;AACP;AACA;AACA,KAAK;AACL;;;;;;;;;;;;;AChFA;AAAA;AAAO;AACP;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"sr-scrambler\"] = factory();\n\telse\n\t\troot[\"sr-scrambler\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","export var CubePlane;\n(function (CubePlane) {\n    CubePlane[\"X\"] = \"x\";\n    CubePlane[\"Y\"] = \"y\";\n    CubePlane[\"Z\"] = \"z\";\n})(CubePlane || (CubePlane = {}));\nexport var Side;\n(function (Side) {\n    Side[\"L\"] = \"L\";\n    Side[\"R\"] = \"R\";\n    Side[\"U\"] = \"U\";\n    Side[\"D\"] = \"D\";\n    Side[\"F\"] = \"F\";\n    Side[\"B\"] = \"B\";\n})(Side || (Side = {}));\nexport var Modifier;\n(function (Modifier) {\n    Modifier[\"Double\"] = \"2\";\n    Modifier[\"CounterClockwise\"] = \"'\";\n    Modifier[\"Clockwise\"] = \"\";\n})(Modifier || (Modifier = {}));\n","var _a;\nimport { CubePlane, Side, Modifier } from \"./enums\";\nimport { randomElement } from \"./util\";\nvar planeMapping = (_a = {},\n    _a[Side.L] = CubePlane.X,\n    _a[Side.R] = CubePlane.X,\n    _a[Side.U] = CubePlane.Y,\n    _a[Side.D] = CubePlane.Y,\n    _a[Side.F] = CubePlane.Z,\n    _a[Side.B] = CubePlane.Z,\n    _a);\nvar sides = [Side.L, Side.R, Side.U, Side.D, Side.F, Side.B];\nvar modifiers = [\n    Modifier.Double,\n    Modifier.CounterClockwise,\n    Modifier.Clockwise\n];\nvar Turn = /** @class */ (function () {\n    function Turn(cubeSize, face, depth, modifier) {\n        this.cubeSize = cubeSize;\n        this.face = face;\n        this.depth = depth;\n        this.modifier = modifier;\n    }\n    Turn.prototype.toHtml = function () {\n        if (this.depth > 1) {\n            // Cube sizes under 6 have different notation\n            if (this.cubeSize > 5) {\n                return this.face + \"<sub>\" + this.depth + \"</sub>\" + this.modifier;\n            }\n            else {\n                return this.face.toLowerCase() + this.modifier;\n            }\n        }\n        else {\n            return this.face + this.modifier;\n        }\n    };\n    return Turn;\n}());\nexport { Turn };\n/**\n * Generates a scramble for an nxn cubic twisty puzzle\n * @param size size of the cube (ex 3 for a 3x3 rubiks cube)\n * @param numTurns number of moves to generate in the sramble\n */\nexport function generateScramble(size, numTurns) {\n    var turns = [];\n    var previousTurn;\n    var newTurn;\n    var maxDepth = Math.floor(size / 2);\n    for (var i = 0; i < numTurns; i++) {\n        do {\n            newTurn = randomElement(sides);\n        } while (planeMapping[previousTurn] === planeMapping[newTurn]);\n        var depth = Math.floor(Math.random() * maxDepth) + 1;\n        turns.push(new Turn(size, newTurn, depth, randomElement(modifiers)));\n        previousTurn = newTurn;\n    }\n    return turns;\n}\n/**\n * Generates a scramble and returns it ready to put on an html page\n * @param  {int} size how big(in layers) of cube to generate a scramble for\n * @param  {int} numTurns how many turns the scramble should be\n * @return {String} html string to display scramble\n */\nexport function generateHtmlScramble(size, numTurns) {\n    return convertScrambleToHtml(generateScramble(size, numTurns));\n}\n;\n/**\n * Converts an array of turns to an html string\n * @param  {Array} turns an array of turns\n * @return {String} html string to display scramble\n */\nexport function convertScrambleToHtml(turns) {\n    return turns.reduce(function (previous, current) {\n        return previous + \" \" + current.toHtml();\n    }, '');\n}\n","export function randomElement(array) {\n    if (!Array.isArray(array) || array.length < 1) {\n        return null;\n    }\n    return array[Math.floor(Math.random() * array.length)];\n}\n"],"sourceRoot":""}